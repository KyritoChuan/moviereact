{"version":3,"sources":["components/MenuTop/MenuTop.jsx","hooks/useFetch.jsx","utils/constants.js","components/Loading/Loading.jsx","components/SliderMovies/SliderMovies.jsx","components/MovieList/MovieList.jsx","components/Footer/Footer.jsx","pages/home.jsx","components/MovieCatalog/MovieCatalog.jsx","components/Pagination/Pagination.jsx","components/MoviesTemplate/MoviesTemplate.jsx","pages/new-movies.jsx","pages/popular.jsx","pages/search/search.jsx","components/ModalVideo/ModalVideo.jsx","pages/movie/movie.jsx","pages/error404.jsx","App.js","serviceWorker.js","index.js","assets/img/logo.svg"],"names":["MenuTop","className","Navbar","collapseOnSelect","expand","variant","src","Logo","alt","width","Toggle","aria-controls","Collapse","id","Nav","Link","href","useFetch","url","options","useState","loading","setLoading","result","setResult","error","setError","useEffect","a","fetch","json","URL_API","API","Loading","Spinner","animation","role","SliderMovies","props","movies","carrouselMov","setcarrouselMov","results","Carousel","activeIndex","onSelect","selectedIndex","e","map","movie","Item","key","Movie","backdrop_path","title","overview","backdropPath","style","backgroundImage","Container","Row","Col","xl","to","Button","MovieList","ListGroup","as","RenderMovie","poster_path","posterPath","type","RightOutlined","Footer","Home","newMovies","popularMovies","topRatedMovies","fluid","MovieCatalog","lg","md","sm","MovieCard","Card","Img","Title","EyeOutlined","PaginationMovie","currentPage","totalItems","onChangePage","current","total","pageSize","onChange","MoviesTemplate","movieList","setMovieList","page","setPage","response","textAlign","marginTop","fontSize","fontWeight","total_results","NewMovies","Popular","withRouter","location","history","searchValue","setSearchValue","s","queryString","parseUrl","search","query","length","document","getElementById","textContent","Form","Group","xs","span","offset","Control","name","placeholder","value","urlParams","parse","target","push","stringify","padding","onClick","undefined","trim","ModalVideo","videoKey","videoPlatform","isOpen","close","urlVideo","setUrlVideo","Modal","size","show","onHide","Header","closeButton","Body","controls","useParams","movieInfo","PosterMovie","image","MovieInfo","release_date","genres","isVisibleModal","setisVisibleModal","videoMovie","openModal","closeModal","moment","format","PlayCircleFilled","site","renderVideo","gender","Error404","App","display","flexDirection","zIndex","path","component","exact","Search","Error","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.8b3d8083.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport Logo from \"../../assets/img/logo.svg\";\r\n\r\nimport \"./MenuTop.scss\";\r\n\r\nexport default function MenuTop() {\r\n  return (\r\n    <div className=\"menu-top\">\r\n      <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n        <img src={Logo} alt=\"logo\" width=\"40\" className=\"menu-top__logo\" />\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Home</Nav.Link>\r\n            <Nav.Link href=\"/new-movies\">Estrenos Cartelera</Nav.Link>\r\n            <Nav.Link href=\"/popular\">Peliculas Populares</Nav.Link>\r\n            <Nav.Link href=\"/search\">Buscador</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFetch(url, options) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const result = await fetch(url, options);\r\n        const json = await result.json();\r\n        setLoading(false);\r\n        setResult(json);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [options, url]);\r\n\r\n  return { loading, result, error };\r\n}\r\n","export const URL_API = \"https://api.themoviedb.org/3\";\r\nexport const API = \"fb37a91f7fb50c5584d5639d85e54b67\";\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./Loading.scss\";\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loading\">\r\n      <Spinner animation=\"grow\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </Spinner>\r\n      <h2>Cargando...</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Carousel, Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport \"./SliderMovies.scss\";\r\n\r\nexport default function SliderMovies(props) {\r\n  const { movies } = props;\r\n  const [carrouselMov, setcarrouselMov] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setcarrouselMov(selectedIndex);\r\n  };\r\n\r\n  if (movies.loading || !movies.result) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const { results } = movies.result;\r\n\r\n  return (\r\n    <Carousel\r\n      activeIndex={carrouselMov}\r\n      onSelect={handleSelect}\r\n      className=\"slider-movies\"\r\n    >\r\n      {results.map((movie) => (\r\n        <Carousel.Item key={movie.id}>\r\n          <Movie movie={movie} />\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nfunction Movie(props) {\r\n  const {\r\n    movie: { id, backdrop_path, title, overview },\r\n  } = props;\r\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n  return (\r\n    <div className=\"slider-movies__movie\">\r\n      <div\r\n        className=\"slider-movies__movie\"\r\n        style={{ backgroundImage: `url('${backdropPath}')` }}\r\n      >\r\n        <div className=\"slider-movies__movie-info\">\r\n          <Container>\r\n            <Row>\r\n              <Col xl={12}>\r\n                <h2>{title}</h2>\r\n              </Col>\r\n              <Col xl={12}>\r\n                <p className=\"movie-info-overview\">{overview}</p>\r\n              </Col>\r\n              <Col xl={12}>\r\n                <Link to={`/movie/${id}`}>\r\n                  <Button variant=\"primary\">Ver más</Button>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RightOutlined } from \"@ant-design/icons\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport \"./MovieList.scss\";\r\n\r\nexport default function MovieList(props) {\r\n  const { title, movies } = props;\r\n\r\n  if (movies.loading || !movies.result) {\r\n    return <Loading />;\r\n  }\r\n  return (\r\n    <ListGroup className=\"movie-list\">\r\n      <ListGroup.Item as=\"div\" className=\"movie-list__header\">\r\n        <h4>{title}</h4>\r\n      </ListGroup.Item>\r\n      <div className=\"movie-list__items\">\r\n        {movies.result.results.map((movie) => (\r\n          <RenderMovie key={movie.id} movie={movie} />\r\n        ))}\r\n      </div>\r\n    </ListGroup>\r\n  );\r\n}\r\n\r\nfunction RenderMovie(props) {\r\n  const {\r\n    movie: { id, title, poster_path },\r\n  } = props;\r\n\r\n  const posterPath = `https://image.tmdb.org/t/p/original/${poster_path}`;\r\n\r\n  return (\r\n    <ListGroup.Item className=\"movie-item\" as=\"li\">\r\n      <div className=\"movie-item__meta\">\r\n        <span className=\"movie-item__meta__avatar\">\r\n          <img src={posterPath} alt={title} />\r\n        </span>\r\n        <h5 className=\"movie-item__meta__title\">\r\n          <Link to={`/movie/${id}`}>{title}</Link>\r\n        </h5>\r\n      </div>\r\n      <Link to={`/movie/${id}`}>\r\n        <Button type=\"primary\" className=\"movie-item__button-circle\">\r\n          <RightOutlined />\r\n        </Button>\r\n      </Link>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p>Camilo Vallejos Provoste</p>\r\n    </footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { URL_API, API } from \"../utils/constants\";\r\nimport SliderMovies from \"../components/SliderMovies\";\r\nimport MovieList from \"../components/MovieList\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nexport default function Home() {\r\n  const newMovies = useFetch(\r\n    `${URL_API}/movie/now_playing?api_key=${API}&language=es&page=1`\r\n  );\r\n\r\n  const popularMovies = useFetch(\r\n    `${URL_API}/movie/popular?api_key=${API}&language=es&page=1`\r\n  );\r\n\r\n  const topRatedMovies = useFetch(\r\n    `${URL_API}/movie/top_rated?api_key=${API}&language=es&page=1`\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <SliderMovies movies={newMovies} />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <MovieList title=\"Películas populares\" movies={popularMovies} />\r\n          </Col>\r\n          <Col>\r\n            <MovieList\r\n              title=\"Top peliculas mejor valoradas\"\r\n              movies={topRatedMovies}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport { EyeOutlined } from \"@ant-design/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MovieCatalog.scss\";\r\n\r\nexport default function MovieCatalog(props) {\r\n  const {\r\n    movies: { results },\r\n  } = props;\r\n\r\n  return results.map((movie) => (\r\n    <Col key={movie.id} lg={3} md={4} sm={5} className=\"movie-catalog\">\r\n      <MovieCard movie={movie} />\r\n    </Col>\r\n  ));\r\n}\r\n\r\nfunction MovieCard(props) {\r\n  const {\r\n    movie: { id, title, poster_path },\r\n  } = props;\r\n  const posterPath = `https://image.tmdb.org/t/p/original/${poster_path}`;\r\n  return (\r\n    <Link to={`/movie/${id}`}>\r\n      <Card style={{ width: 240 }}>\r\n        <Card.Img variant=\"top\" src={posterPath} />\r\n        <Card.Title>\r\n          <h5>{title}</h5>\r\n        </Card.Title>\r\n        <Card.Footer>\r\n          <EyeOutlined />\r\n        </Card.Footer>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Pagination from \"rc-pagination\";\r\n\r\nimport \"./Pagination.scss\";\r\n\r\nexport default function PaginationMovie(props) {\r\n  const { currentPage, totalItems, onChangePage } = props;\r\n\r\n  return (\r\n    <Pagination\r\n      className=\"pagination\"\r\n      current={currentPage}\r\n      total={totalItems}\r\n      pageSize={20}\r\n      onChange={onChangePage}\r\n    />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Footer from \"../Footer\";\r\nimport Loading from \"../Loading\";\r\nimport MovieCatalog from \"../MovieCatalog\";\r\nimport Pagination from \"../Pagination\";\r\n\r\nexport default function MoviesTemplate(props) {\r\n  const { url, title } = props;\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      debugger;\r\n      const response = await fetch(url + `&page=${page}`);\r\n      const movies = await response.json();\r\n      setMovieList(movies);\r\n    })();\r\n  }, [page, url]);\r\n\r\n  const onChangePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col style={{ textAlign: \"center\", marginTop: 25 }}>\r\n            <h1 style={{ fontSize: 35, fontWeight: \"bold\" }}>{title}</h1>\r\n          </Col>\r\n        </Row>\r\n        {movieList.results ? (\r\n          <>\r\n            <Row>\r\n              <MovieCatalog movies={movieList} />\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Pagination\r\n                  currentPage={movieList.page}\r\n                  totalItems={movieList.total_results}\r\n                  onChangePage={onChangePage}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </>\r\n        ) : (\r\n          <Col>\r\n            <Loading />\r\n          </Col>\r\n        )}\r\n      </Container>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { URL_API, API } from \"../utils/constants\";\r\nimport MoviesTemplate from \"../components/MoviesTemplate\";\r\n\r\nexport default function NewMovies() {\r\n  const url = `${URL_API}/movie/now_playing?api_key=${API}&language=es-ES`;\r\n  const title = \"Ultimos Lanzamientos\";\r\n\r\n  return <MoviesTemplate url={url} title={title} />;\r\n}\r\n","import React from \"react\";\r\nimport { URL_API, API } from \"../utils/constants\";\r\nimport MoviesTemplate from \"../components/MoviesTemplate\";\r\n\r\nexport default function Popular() {\r\n  const url = `${URL_API}/movie/popular?api_key=${API}&language=es-ES`;\r\n  const title = \"Peliculas Populares\";\r\n\r\n  return <MoviesTemplate url={url} title={title} />;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Form, Button, Container } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport MovieCatalog from \"../../components/MovieCatalog\";\r\nimport Footer from \"../../components/Footer\";\r\nimport { URL_API, API } from \"../../utils/constants\";\r\n\r\nimport \"./search.scss\";\r\n\r\nfunction Search(props) {\r\n  const { location, history } = props;\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const searchValue = queryString.parseUrl(location.search);\r\n    const { s } = searchValue.query;\r\n    setSearchValue(s);\r\n  }, [location.search]);\r\n\r\n  useEffect(() => {\r\n    if(movieList.length == 0) {\r\n      if(searchValue == \"\") {\r\n        document.getElementById(\"lblError\").textContent = \"\";\r\n      } else {\r\n        document.getElementById(\"lblError\").textContent =\r\n        \"No se ha ingresado ninguna referencia a la busqueda.\";\r\n        setSearchValue(\"\");\r\n      }\r\n    }\r\n  }, [movieList]);\r\n\r\n  const onChangeSearch = (e) => {\r\n    const urlParams = queryString.parse(location.search);\r\n    urlParams.s = e.target.value;\r\n    history.push(`?${queryString.stringify(urlParams)}`);\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const searchMovie = () => {\r\n    const s = searchValue;\r\n    debugger;\r\n    // eslint-disable-next-line\r\n    if (s.trim() != undefined && s.trim() != \"\") {\r\n      (async () => {\r\n        const response = await fetch(\r\n          `${URL_API}/search/movie?api_key=${API}&language=es-ES&query=${s}&page=1`\r\n        );\r\n        const movies = await response.json();\r\n        setSearchValue(s);\r\n        setMovieList(movies);\r\n      })();\r\n    \r\n    } else {\r\n      setSearchValue(\" \");\r\n      setMovieList(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"search\">\r\n        <Row>\r\n          <Col style={{ textAlign: \"center\", marginTop: 25 }}>\r\n            <h1 style={{ fontSize: 35, fontWeight: \"bold\" }}>\r\n              Busca tu película\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Form.Group>\r\n          <Row className=\"search__form\">\r\n            <Col xs={12} md={{ span: 4, offset: 3 }}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Escribe el nombre de tu pelicula.\"\r\n                value={searchValue}\r\n                onChange={onChangeSearch}\r\n              />\r\n            </Col>\r\n            <Col xs={4} style={{ padding: 10 }}>\r\n              <Button\r\n                className=\"search__form__button\"\r\n                type=\"primary\"\r\n                onClick={searchMovie}\r\n              >\r\n                Buscar\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form.Group>\r\n        <Row>\r\n          {\r\n            // eslint-disable-next-line\r\n            movieList.length != 0 ? (\r\n              <MovieCatalog movies={movieList} />\r\n            ) : (\r\n              <Col md={{ span: 6, offset: 3 }}>\r\n                <h2 id=\"lblError\">{}</h2>\r\n              </Col>\r\n            )\r\n          }\r\n        </Row>\r\n      </Container>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(Search);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nimport \"./ModalVideo.scss\";\r\n\r\nexport default function ModalVideo(props) {\r\n  const { videoKey, videoPlatform, isOpen, close } = props;\r\n  const [urlVideo, setUrlVideo] = useState(null);\r\n\r\n  useEffect(() => {\r\n    switch (videoPlatform) {\r\n      case \"YouTube\":\r\n        setUrlVideo(`https://youtu.be/${videoKey}`);\r\n        break;\r\n      case \"Vimeo\":\r\n        setUrlVideo(`https://vimeo.com/${videoKey}`);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [videoKey, videoPlatform]);\r\n\r\n  return (\r\n    <Modal className=\"modal-video\" size=\"xl\" show={isOpen} onHide={close}>\r\n      <Modal.Header closeButton></Modal.Header>\r\n      <Modal.Body>\r\n        <ReactPlayer url={urlVideo} controls />\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { PlayCircleFilled } from \"@ant-design/icons\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { URL_API, API } from \"../../utils/constants\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ModalVideo from \"../../components/ModalVideo\";\r\n\r\nimport \"./movie.scss\";\r\n\r\nexport default function Movie() {\r\n  const { id } = useParams();\r\n  const movieInfo = useFetch(\r\n    `${URL_API}/movie/${id}?api_key=${API}&language=es-ES`\r\n  );\r\n\r\n  if (movieInfo.loading || !movieInfo.result) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return <RenderMovie movieInfo={movieInfo.result} />;\r\n}\r\n\r\nfunction RenderMovie(props) {\r\n  const {\r\n    movieInfo: { backdrop_path, poster_path },\r\n  } = props;\r\n\r\n  const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n\r\n  return (\r\n    <Container\r\n      fluid\r\n      className=\"movie\"\r\n      style={{\r\n        backgroundImage: `url('${backdropPath}')`,\r\n      }}\r\n    >\r\n      <div className=\"movie__dark\" />\r\n      <Row className=\"movie__row\">\r\n        <Col lg={5} className=\"movie__poster\">\r\n          <PosterMovie image={poster_path} />\r\n        </Col>\r\n        <Col lg={6} className=\"movie__info\">\r\n          <MovieInfo movieInfo={props.movieInfo} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nfunction PosterMovie(props) {\r\n  const { image } = props;\r\n  const posterPath = `https://image.tmdb.org/t/p/original${image}`;\r\n  return <div style={{ backgroundImage: `url('${posterPath}')` }} />;\r\n}\r\n\r\nfunction MovieInfo(props) {\r\n  const {\r\n    movieInfo: { id, title, release_date, overview, genres },\r\n  } = props;\r\n\r\n  const [isVisibleModal, setisVisibleModal] = useState(false);\r\n  const videoMovie = useFetch(\r\n    `${URL_API}/movie/${id}/videos?api_key=${API}&language=es-ES`\r\n  );\r\n\r\n  const openModal = () => {\r\n    setisVisibleModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setisVisibleModal(false);\r\n  };\r\n\r\n  const renderVideo = () => {\r\n    if (videoMovie.result) {\r\n      if (videoMovie.result.results.length > 0) {\r\n        return (\r\n          <>\r\n            <Button onClick={openModal}>\r\n              <PlayCircleFilled />\r\n              Ver Trailer\r\n            </Button>\r\n            <ModalVideo\r\n              videoKey={videoMovie.result.results[0].key}\r\n              videoPlatform={videoMovie.result.results[0].site}\r\n              isOpen={isVisibleModal}\r\n              close={closeModal}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"movie__info-header\">\r\n        <Row>\r\n          <Col xs={12}>\r\n            <h1>\r\n              {title}\r\n              <span>{moment(release_date, \"YYYY-MM-DD\").format(\"YYYY\")}</span>\r\n            </h1>\r\n          </Col>\r\n          <Col xs={12}>{renderVideo()}</Col>\r\n        </Row>\r\n      </div>\r\n      <div className=\"movie__info-content\">\r\n        <Row>\r\n          <Col>\r\n            <h3>Información General</h3>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <p>{overview}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <h3>Géneros</h3>\r\n            <ul>\r\n              {genres.map((gender) => (\r\n                <li key={gender.id}>{gender.name}</li>\r\n              ))}\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Error404() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col style={{ textAlign: \"center\", marginTop: 25 }}>\r\n          <h1 style={{ fontSize: 35, fontWeight: \"bold\" }}>Error 404</h1>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col style={{ textAlign: \"center\", marginTop: 25 }}>\r\n          <h2>Página no encontrada</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col style={{ textAlign: \"center\", marginTop: 25 }}>\r\n          <Link to=\"/\">\r\n            <h3>Volver al inicio</h3>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport MenuTop from \"./components/MenuTop\";\n\n// Pages\nimport Home from \"./pages/home\";\nimport NewMovies from \"./pages/new-movies\";\nimport Popular from \"./pages/popular\";\nimport Search from \"./pages/search\";\nimport Movie from \"./pages/movie\";\nimport Error from \"./pages/error404\";\n\nfunction App() {\n  return (\n    <>\n      <section style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Router>\n          <header style={{ zIndex: 1 }}>\n            <MenuTop />\n          </header>\n          <main>\n            <Switch>\n              <Route path=\"/\" component={Home} exact={true} />\n              <Route path=\"/new-movies\" component={NewMovies} exact={true} />\n              <Route path=\"/popular\" component={Popular} exact={true} />\n              <Route path=\"/search\" component={Search} exact={true} />\n              <Route path=\"/movie/:id\" component={Movie} exact={true} />\n              <Route path=\"*\" component={Error} />\n            </Switch>\n          </main>\n        </Router>\n      </section>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"rc-pagination/assets/index.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cb90c5bd.svg\";"],"sourceRoot":""}